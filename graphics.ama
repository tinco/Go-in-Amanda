|| Graphics
posTp == (num, num)

|| Geeft de graphics objecten voor het gegeven bord terug.  
tekenBord :: goBordTp -> [(graphics)]
tekenBord bord = background : goban : lijnen ++ stenen
  where
    bord_size = #bord
    background = GraphRectangle darkgrey ((-1),(-1)) (1,1)
    goban_s = goban_spacing bord_size
    goban = GraphRectangle lightgrey (hd goban_s, hd goban_s) (last goban_s, last goban_s)
    lijnen = map (l->GraphPolyLine black l) (lineCoords bord_size)
    stenen = map (((x, y), k)->GraphDisc (spelerKleur k) x y) (stoneCoords bord)

|| Geeft de posities van de lijnen op het bord.
lineCoords :: num -> [[posTp]]
lineCoords n
  = verts ++ horizs
  where    
    spacing = bord_spacing n
    vert_begins = zip (spacing, repeat n (hd spacing))
    vert_ends = zip (spacing, repeat n (last spacing))
    verts = zipwith (toline) vert_begins vert_ends
    horiz_begins = zip (repeat n (hd spacing), spacing)
    horiz_ends = zip (repeat n (last spacing), spacing)
    horizs = zipwith (toline) horiz_begins horiz_ends

|| Geeft de posities voor de stenen. Op het bord. 
stoneCoords :: goBordTp -> [((posTp,posTp),spelerTp)]      
stoneCoords bord
  = stenen
  where
    bord_size = #bord
    spacing = bord_spacing bord_size
    || Dit is redelijk sexy:
    positions = concat (zipwith (rij->space_x->
                 (zipwith (steen->space_y->
                   (discPosition bord_size (space_x, space_y), steen)
                  ) rij (reverse spacing) ) || Spiegelen in de y-as
                ) bord spacing )
    stenen = filter ((_,c)-> c ~= None) positions
    
      
|| Om de punten van het bord is 1 space ruimte voor de stenen
|| en 1 space ruimte voor de rand van het bord
|| Deze functies geven arrays met daarin de verdeling van het bord
|| over de range -1 tot 1 voor gebruik in de graphics functies
game_spacing :: num -> [num]
game_spacing bord_size = (spread (-1) 1 (bord_size+4))
goban_spacing :: num -> [num]
goban_spacing bord_size = sublist (game_spacing bord_size) 1 (bord_size + 2)
bord_spacing :: num -> [num]
bord_spacing bord_size = sublist (goban_spacing bord_size) 1 bord_size
game_space :: num -> num
game_space bord_size = 2 // (bord_size + 4)

|| Maakt van 2 posities een array voor PolyLine
toline :: posTp -> posTp -> [posTp]
toline b e = [b, e]

|| Converteert een spelerkleur naar de corresponderende graphics kleur
spelerKleur :: spelerTp -> num
spelerKleur White = white
spelerKleur Black = black

|| Geeft de positie informatie voor een steen terug gebaseerd
|| op de spacing die het huidige bord gebruikt en de positie.
discPosition :: num -> posTp -> (posTp, posTp)  
discPosition bord_size (x,y) 
  = ((x - stone_radius, y - stone_radius), (x + stone_radius, y + stone_radius))
  where
    stone_radius = stoneRadius bord_size

|| Retourneert de radius van een steen gegeven de bord_size
stoneRadius :: num -> num
stoneRadius bord_size
  = ((game_space bord_size) // 2 ) * (15//16)
      
|| Retourneert de bordpositie voor een graphics positie als die positie op het bord is.
onStone :: goBordTp -> posTp -> maybe posTp
onStone bord (x,y)
  = Just (pos_x, pos_y) , if on_bord x /\ on_bord y
  = Nothing , otherwise
    where
      bord_size = #bord
      spacing = bord_spacing bord_size
      stone_radius  = space // 2
      space = game_space (bord_size)
      || totaal 23 spaces.
      || Het bord loopt van de 3e space tot en met de 22e
      || Stenen zijn 1 space breed en liggen met hun midden
      || op de spacing punten.
      || We tellen 1 op by x en y zodat de range [0..2] word ipv [-1, 1]
      || Als we ze dan door space delen krijgen we een getal dat aangeeft
      || in welke space het ligt.
      || Space 0 = buiten het bord.
      || Space 1-1.5 = rand van het bord, niet klikbaar
      || Space 1.5-2.5 = de eerste rij/kolom.
      || Probleem: de precisie lijkt af te nemen naarmate x,y -> 1,1 (rechtsonder)
      || Mogelijke oplossing richting: space klopt toch niet? Zo niet, te groot, te klein, waarom?
      ||                             : de 1.5 moet eraf in een andere vorm? (voor de deler?)
      ||                             : het truncaten van _space klopt niet, andere afronding.
      x_space = ((x + 1) // space) - 1.5
      y_space = ((y + 1) // space) - 1.5
      pos_x = trunc x_space
      pos_y = bord_size - (trunc y_space) || geinverteerd in y as
      on_bord = x -> between ((hd spacing) - stone_radius) ((last spacing) + stone_radius) x
    
||============= constants =====================================

black       =  0
darkblue    =  1
darkgreen   =  2
greyblue    =  3
darkred     =  4
purple      =  5
mudgreen    =  6
lightgrey   =  7
darkgrey    =  8
blue        =  9
lightgreen  = 10
lightblue   = 11
red         = 12
lightpurple = 13
yellow      = 14
white       = 15