|| Input

||handleInput game (KeyIn 'n' : es) || New game
||  = (tekenBord bord) ++ handleInput game es
||  where
||    {bord=bord}=game
||
||handleInput game (MouseUp(x,y) : es) ||Turn
||  = (tekenBord new_bord) ++ handleInput new_game es
||  where
||    {bord=bord}=game
||    on_stone = onStone bord (x,y)
||    Just (position) = on_stone
||    new_bord = setPosition bord White position , if on_stone ~= Nothing
||             = bord , otherwise 
||    new_game = game & {bord=new_bord}
||
||handleInput gameTp (KeyIn 'p' : es) ||Pass
||  = handleInput gameTp es || Ook nog beurt naar de volgende
||
|||| Functies voor het functioneren van de app. Deze moeten altijd als laatste.
||handleInput gameTp (KeyIn '\e' : es) = [] || Stop.
||  
|||| Handel alle overige inputevents af door er niks mee te doen en verder te gaan met de volgende.
||handleInput gameTp ( e : es) = handleInput gameTp es
  
|| Turn
|| A stone may not be placed upon another stone.
|| A stone may not result in an own group dying.
|| A stone may not recreate the previous situation.
handleTurn game (MouseUp(x,y) : es) ||Turn
  = (new_game, es) , if ~invalidpos /\ ~suicide /\ ~ko
  = handleTurn game es, otherwise
  where
    {bord=bord, speler=speler, history=history, score=score}=game
    (s_b, s_w) = score
    on_stone = onStone bord (x,y)
    Just (position) = on_stone
    invalidpos = on_stone = Nothing \/ getPosition bord position ~= None
    
    (new_bord, p_score) = move bord speler position , if ~invalidpos
                        = (bord, 0) , otherwise
    new_score = (s_b + p_score, s_w) , if speler = Black
              = (s_b, s_w + p_score) , otherwise
                
    suicide = isGroupDead new_bord (group new_bord position)
    ko = new_bord = (history ! (#history - 2)) , if #history > 2
       = False , otherwise
    ||Score
    new_history = history ++ [new_bord]
    new_game = game & {bord=new_bord, history=new_history, score=new_score, pass=0}

handleTurn game (KeyIn 'r' : es)
  = (game & {winnaar=speler}, es)
    where
      {winnaar=winnaar, speler=speler} = game
    
handleTurn game (KeyIn 'p' : es)
  = (game & {pass=pass + 1}, es)
    where
      {pass=pass} = game
      
handleTurn game (e : es)
  = handleTurn game es

handleBegin2 (Prompt "Bord size" bord_size : events)
  = (atoi bord_size, events)
    
handleBegin2 (e : events)
  = handleBegin2 events
    
|| Score
handleScore game (MouseUp(x,y):es)
  = (new_game,es)
  where
    {bord=bord, score=score} = game
    (s_b, s_w) = score
    on_stone = onStone bord (x,y)
    Just (position) = on_stone
    (new_bord, p_score, speler) = (killGroup bord (group bord position), #(group bord position), getPosition bord position), if on_stone ~= Nothing
                                = (bord,0, None) , otherwise
    new_score = (s_b + p_score, s_w) , if speler = Black
              = (s_b, s_w + p_score) , otherwise
                
    new_game = game & {bord=new_bord, score = new_score}

handleScore game (e:es) = handleScore game es