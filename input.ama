|| Input

||handleInput game (KeyIn 'n' : es) || New game
||  = (tekenBord bord) ++ handleInput game es
||  where
||    {bord=bord}=game
||
||handleInput game (MouseUp(x,y) : es) ||Turn
||  = (tekenBord new_bord) ++ handleInput new_game es
||  where
||    {bord=bord}=game
||    on_stone = onStone bord (x,y)
||    Just (position) = on_stone
||    new_bord = setPosition bord White position , if on_stone ~= Nothing
||             = bord , otherwise 
||    new_game = game & {bord=new_bord}
||
||handleInput gameTp (KeyIn 'p' : es) ||Pass
||  = handleInput gameTp es || Ook nog beurt naar de volgende
||
|||| Functies voor het functioneren van de app. Deze moeten altijd als laatste.
||handleInput gameTp (KeyIn '\e' : es) = [] || Stop.
||  
|||| Handel alle overige inputevents af door er niks mee te doen en verder te gaan met de volgende.
||handleInput gameTp ( e : es) = handleInput gameTp es
  
|| handleTurn

handleTurn game (MouseUp(x,y) : es) ||Turn
  = (new_game, es), if ~invalidpos /\ ~suicide
  = handleTurn game es, otherwise
  where
    {bord=bord, speler=speler, history=history}=game
    on_stone = onStone bord (x,y)
    Just (position) = on_stone
    invalidpos = on_stone ~= Nothing /\ getPosition bord position ~= None
    new_history = history ++ [bord]
    new_bord = setPosition bord speler position
             = bord , otherwise 
    (new_bord, score) = calcScore bord speler position
    suicide = calcSuicide bord speler position
    ||Score
    new_game = game & {bord=new_bord, history=new_history}
      
handleTurn game (e : es)
  = handleTurn game es
<<<<<<< HEAD
  
=======

>>>>>>> score begin
handleBegin2 (Prompt "Bord size" bord_size : events)
  = (atoi bord_size, events)
    
handleBegin2 (e : events)
  = handleBegin2 events
    
|| Score
handleScore game (MouseUp(x,y):es)
  = (new_game,es)
  where
    {bord=bord, (score_w, score_b)=score} = game
    on_stone = onStone bord (x,y)
    Just (position) = on_stone
    (new_bord, (p_score_b, p_score_w)) = killGroup bord position, if position
                          = (bord, score) , otherwise
    new_score = ((p_score_b + score_b), (p_score_w + score_w))
    new_game = game & {bord=new_bord, score = new_score}

handleScore game (e:es) = handleScore game es